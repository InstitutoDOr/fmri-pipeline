%% configurations 

config = [];

%% GENERAL PARAMETERS
config.preproc_name  = 'NORM_ANAT';
config.dir_base        = '/dados1/PROJETOS/PRJ1410_FUTEBOL/03_PROCS/';
config.raw_base        = fullfile( config.dir_base, 'RAW_DATA', 'NII' );
config.preproc_base    = fullfile( config.dir_base, 'PREPROC_DATA', 'fMRI', config.preproc_name );
config.proc_base       = fullfile( config.dir_base, 'PROC_DATA', 'fMRI', config.preproc_name );
config.nrun = 3
config.nvol = 256
config.ncorte = 40 
config.TR = 2
config.TA = 1.675;
config.TA = config.TA - (config.TA/config.ncorte)
config.smooth = [6 6 6]
config.export_from_raw_data = 1; 

config.runs_prefix = { 'FMRI__RUN1_PRJ1410*', 'FMRI__RUN2_PRJ1410*', 'FMRI__RUN3_PRJ1410*' }; 
config.run_file_prefix = 'FMRIRUN';
config.run_file_suffix = 'PRJ1410SENSE';

config.anat_prefix = '3D_T1_PRJ1410*';
config.anat_file = '3DT1PRJ1410SENSE.nii';

%% subjects
config.subj_prefix = 'SUBJ';

%% EDITAR AQUI PARA CONFIGURAR O QUE RODAR
config.subjs = [2:16 18 19];
do_preprocessing = 0; % 0 ou 1;
do_first_level   = 1;
config.only_recalculate_contrasts = 0;
do_second_level  = 1;
config.mov_regressor = 1;
config.resp_regressor = 1;
config.outlier_regressor = 0;

%% configure paths
spm_dir = fileparts( which( 'spm' ) );
addpath( genpath( fullfile( config.dir_base, 'SCRIPTS') ) );
spm fmri

%% PREPROCESSING
if do_preprocessing
    preprocessing
end

%% smoothing
do_smoothing = 0
if do_smoothing
    config.file_prefix = 'gwar';
    apply_smoothing
end


%% inicializar uma vez o struct
config.model = get_cue_motor_model();
config.model(1) = [];

% modelos com regressor motor
%     config.model(end+1) = get_cue_motor_model();
%      config.model(end+1) = get_cue_and_squeeze_motor_model();
%     config.model(end+1) = get_cue_and_squeeze_and_outcome_motor_model();
%     config.model(end+1) = get_squeeze_motor_model();

%     % models sem regressor motor
%     config.model(end+1) = get_cue_model();
%     config.model(end+1) = get_cue_and_squeeze_model();
%     config.model(end+1) = get_cue_and_squeeze_and_outcome_model();
%     config.model(end+1) = get_squeeze_model();
%
%     % modelos parametricos
%     config.model(end+1) = get_parametric_cue_model();
%     config.model(end+1) = get_parametric_cue_and_squeeze_model();
%     config.model(end+1) = get_cue_and_squeeze_and_outcome_model();
%     config.model(end+1) = get_squeeze_model();
      config.model(end+1) = get_effort_separado_parametric_cue_and_squeeze_model();
%
%     % strange model design
%     config.model(end+1) = get_cue_and_squeeze_without_effort_motor_model();
%
%     config.model(end+1) = get_effort_separado_cue_motor_model();
%   config.model(end+1) = get_effort_separado_outcome_motor_model();   
%     config.model(end+1) = get_parametric_cue_and_squeeze_model();

% config.model(end+1) = get_effort_separado_cue_and_squeeze_model();
% config.model(end+1) = get_effort_separado_CSO_model();
% config.model(end+1) = get_effort_separado_outcome_model();
% config.model(end+1) = get_cue_phase_model();

%for k=1:length(config.model )
    
   %config.model(k).name =  ['G' config.model(k).name ];
%end
config.model([]) = [];

    
    
 %% FIRST LEVEL
if do_first_level
    
    config.logdir = '/dados1/PROJETOS/PRJ1410_FUTEBOL/03_PROCS/LOG/';
    config.physlogdir = '/dados1/PROJETOS/PRJ1410_FUTEBOL/03_PROCS/PHYS_LOG/';
    config.files = { '1Run.log', '2Run.log', '3Run.log'};
    config.first_level_preproc_prefix = 'swar';
    
    config.HPF = 128;
    
    run_first_level( config );
    
end

if do_second_level
    
    
    config.sec.covariate.vec  = [ 0 3 6 6 0 5 4 2 4 0 1 2 3 0 5 0 -1000 5 4];
    config.sec.covariate.name = 'DIFFID';
    
    %config.sec.covariate.vec = [1.83 1.00 0.25 1.75 2.25 5.00 1.00 3.75 3.00 1.00 -0.25 -1.25 2.25 2.50 4.75 1.50];
    %config.sec.covariate.name = 'ENTITAVITY';
    
    %config.sec.covariate.vec  = [0.15 0.03 0.05 0.21 0.33 1.02 0.04 0.45 0.69 0.55 0.07 0.01 0.88 0.008 0.40 1.23 -1000 0.19 -0.01];
    %config.sec.covariate.name = 'INGROUPBIAS';

    config.sec.covariate.apply_contrasts = [1:4 7 13 15 16]; % apply covariates only for these contrasts (TEAM)

    %config.sec.g1 = [2 4 5 6 8 9 11 12 15 16];
    config.sec.g1 = [2:16 18 19];
    config.sec.g2 = [];
    config.sec.name = '2_19_COV';

    config.sec.covariate.vec = config.sec.covariate.vec( config.sec.g1 );
    
    run_second_level( config );
end
